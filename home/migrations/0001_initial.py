# Generated by Django 5.2.4 on 2025-07-23 08:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LostItemRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=100)),
                ('name_ru', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('message_uz', models.TextField()),
                ('message_ru', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatisticData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(choices=[('Beruniy', 'Beruniy'), ('Tinchlik', 'Tinchlik'), ('Chorsu', 'Chorsu'), ('Gʻafur Gʻulom', 'Gʻafur Gʻulom'), ('Alisher Navoiy', 'Alisher Navoiy'), ('Abdulla Qodiriy', 'Abdulla Qodiriy'), ('Pushkin', 'Pushkin'), ('Buyuk Ipak Yoʻli', 'Buyuk Ipak Yoʻli'), ('Novza', 'Novza'), ('Milliy bogʻ', 'Milliy bogʻ'), ('Xalqlar doʻstligi', 'Xalqlar doʻstligi'), ('Chilonzor', 'Chilonzor'), ('Mirzo Ulugʻbek', 'Mirzo Ulugʻbek'), ('Olmazor', 'Olmazor'), ('Doʻstlik', 'Doʻstlik'), ('Mashinasozlar', 'Mashinasozlar'), ('Toshkent', 'Toshkent'), ('Oybek', 'Oybek'), ('Kosmonavtlar', 'Kosmonavtlar'), ('Oʻzbekiston', 'Oʻzbekiston'), ('Hamid Olimjon', 'Hamid Olimjon'), ('Ming Oʻrik', 'Ming Oʻrik'), ('Yunus Rajabiy', 'Yunus Rajabiy'), ('Shahriston', 'Shahriston'), ('Bodomzor', 'Bodomzor'), ('Minor', 'Minor'), ('Turkiston', 'Turkiston'), ('Yunusobod', 'Yunusobod'), ('Tuzel', 'Tuzel'), ('Yashnobod', 'Yashnobod'), ('Texnopark', 'Texnopark'), ('Doʻstlik-2', 'Doʻstlik-2'), ('Sergeli', 'Sergeli'), ('Afrosiyob', 'Afrosiyob'), ('Choshtepa', 'Choshtepa'), ('Turon', 'Turon'), ('Chinor', 'Chinor'), ('Yangiobod', 'Yangiobod'), ('Rohat', 'Rohat'), ('Oʻzgarish', 'Oʻzgarish'), ('Yangihayot', 'Yangihayot'), ('Qoʻyliq', 'Qoʻyliq'), ('Matonat', 'Matonat'), ('Qiyot', 'Qiyot'), ('Tolariq', 'Tolariq'), ('Xonobod', 'Xonobod'), ('Quruvchilar', 'Quruvchilar'), ('Olmos', 'Olmos'), ('Amir Temur xiyoboni', 'Amir Temur xiyoboni'), ('Mustaqillik maydoni', 'Mustaqillik maydoni')], max_length=100)),
                ('month', models.CharField(choices=[('Yanvar', 'Yanvar'), ('Fevral', 'Fevral'), ('Mart', 'Mart'), ('Aprel', 'Aprel'), ('May', 'May'), ('Iyun', 'Iyun'), ('Iyul', 'Iyul'), ('Avgust', 'Avgust'), ('Sentyabr', 'Sentyabr'), ('Oktyabr', 'Oktyabr'), ('Noyabr', 'Noyabr'), ('Dekabr', 'Dekabr')], max_length=20)),
                ('user_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('news_editor', 'News Editor'), ('hr', 'HR'), ('statistician', 'Statistician'), ('lost_item_support', 'Lost Item Support')], max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobVacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=100)),
                ('requirements_uz', models.JSONField()),
                ('requirements_ru', models.JSONField()),
                ('benefits_uz', models.JSONField()),
                ('benefits_ru', models.JSONField()),
                ('ageRange', models.CharField(max_length=50)),
                ('category_uz', models.CharField(max_length=100)),
                ('category_ru', models.CharField(max_length=100)),
                ('salaryRange', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('description_uz', models.TextField()),
                ('description_ru', models.TextField()),
                ('fullContent_uz', models.TextField()),
                ('fullContent_ru', models.TextField()),
                ('publishedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('category_uz', models.CharField(max_length=100)),
                ('category_ru', models.CharField(max_length=100)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_news', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_uz', models.CharField(max_length=100)),
                ('author_ru', models.CharField(max_length=100)),
                ('content_uz', models.TextField()),
                ('content_ru', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='home.news')),
            ],
        ),
        migrations.CreateModel(
            name='NewsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_images/')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='home.news')),
            ],
        ),
    ]
